import org.jetbrains.changelog.Changelog

plugins {
    // Must match the Kotlin version bundled with the IDE
    // https://plugins.jetbrains.com/docs/intellij/using-kotlin.html#kotlin-standard-library
    // https://plugins.jetbrains.com/docs/intellij/android-studio-releases-list.html
    id "org.jetbrains.kotlin.jvm" version "1.8.21"

    // https://github.com/JetBrains/gradle-intellij-plugin
    id "org.jetbrains.intellij" version "1.15.0"

    // https://github.com/ajoberstar/reckon
    id "org.ajoberstar.reckon" version "0.14.0"

    // https://github.com/b3er/gradle-local-properties-plugin
    id "com.github.b3er.local.properties" version "1.1"

    // https://github.com/JetBrains/gradle-changelog-plugin
    id "org.jetbrains.changelog" version "2.0.0"

}

repositories {
    mavenCentral()
}

group 'com.developerphil.intellij.plugin.adbidea'
sourceCompatibility = 17
targetCompatibility = 17

intellij {
    pluginName = 'adb_idea_custom'
    updateSinceUntilBuild = false
    version = project.property("ideVersion")
    type = "AI"
    plugins = ['android']

    patchPluginXml {
        sinceBuild = project.property("sinceBuild")

        // Extract the 5 most recent entries in CHANGELOG.md
        changeNotes = provider {
            def s = ""
            changelog.getAll()
                    .drop(1) // drop the [Unreleased] section
                    .take(5) // last 5 changes
                    .forEach { key, val ->
                        s += changelog.renderItem(
                                changelog
                                        .get(key)
                                        .withHeader(true)
                                        .withEmptySections(false),
                                Changelog.OutputType.HTML
                        )
                    }
            s
        }
    }
}

changelog {
    repositoryUrl = "https://github.com/pbreault/adb-idea"
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "[Unreleased]"
    groups.empty()
    combinePreReleases = true
}

task printLastChanges() {
    doLast {
        def s = ""
        changelog.getAll()
                .drop(1) // drop the [Unreleased] section
                .take(5) // last 5 changes
                .forEach { key, val ->
                    s += changelog.renderItem(
                            changelog
                                    .get(key)
                                    .withHeader(false)
                                    .withEmptySections(false),
                            Changelog.OutputType.MARKDOWN
                    )
                }


        println(s)
    }
}

dependencies {
    implementation 'org.jooq:joor-java-8:0.9.14'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.7.0'
    testImplementation 'com.google.truth:truth:1.1.3'
}

reckon {
    scopeFromProp()
    snapshotFromProp()
}

buildSearchableOptions.enabled = false