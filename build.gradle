buildscript {

    ext.kotlin_version = '1.3.41'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.4.9"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'


repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        resources {
            exclude 'website/adb_operations_popup.png'
            exclude 'website/find_actions.png'
            exclude 'website/debug_howto.png'
        }
    }
}

if (!hasProperty('StudioCompilePath')) {
    throw new Exception("No StudioCompilePath value was set, please create gradle.properties file")
}

intellij {
    pluginName 'adb_idea_custom'
    updateSinceUntilBuild false

    intellij.localPath = project.hasProperty("StudioRunPath") ? StudioRunPath : StudioCompilePath
}

group 'com.developerphil.intellij.plugin.adbidea'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    
    compileOnly fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    compileOnly fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])
    
    implementation 'com.google.dagger:dagger:2.6'
    kapt "com.google.dagger:dagger-compiler:2.6"

    testImplementation 'junit:junit:4.12'
    testImplementation fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    testImplementation fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])
    testImplementation "org.mockito:mockito-core:1.+"
    testImplementation "com.google.truth:truth:0.30"
}

task(verifySetup) {
    doLast {
        def ideaJar = "$StudioCompilePath/lib/idea.jar"
        if (!file(ideaJar).exists()) {
            throw new Exception("$ideaJar not found, set StudioCompilePath in gradle.properties")
        }
    }
}


compileJava.dependsOn verifySetup
